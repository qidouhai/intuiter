name: Release Program

on:
  push:
    tags:
      - '[0-9]\.[0-9]\.[0-9]'

jobs:
  release:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set env
        shell: bash
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: get-key
        shell: bash
        run: |
          echo "${{ secrets.PFX }}" | base64 --decode > Seonglae.pfx
          echo "${{ secrets.ENV }}" > .env

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14.x

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
          key: ${{ runner.OS }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-

      - name: Install npm dependencies
        shell: bash
        run: yarn

      - name: Run build task
        shell: bash
        run: |
          yarn build
          ln build/Intuiter*.exe Intuiter.exe

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: make artiface
          path: build

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body_path: docs/versions/${{ env.RELEASE_VERSION }}.md
          draft: false
          prerelease: false

  publish:
    runs-on: windows-latest
    needs: release
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          repository: microsoft/winget-pkgs

      - name: Set VERSION env
        shell: bash
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Set HASH env
        shell: bash
        run:
          HASH=$(curl https://github.com/seonglae/intuiter/releases/download/${{ env.RELEASE_VERSION }}/Intuiter.exe | sha256sum | cut -c-64)
          echo "HASH=${HASH}" >> $GITHUB_ENV
          echo ${{ env.HASH }}"

      - name: Make Manifest
        shell: bash
        run: |
          cd manifests/s/Seonglae/Intuiter
          mkdir ${{ env.RELEASE_VERSION }}
          cd ${{ env.RELEASE_VERSION }}

          echo "PackageIdentifier: Seonglae.Intuiter" >> Seonglae.Intuiter.yaml
          echo "Publisher: Seonglae" >> Seonglae.Intuiter.yaml
          echo "PackageName: Intuiter" >> Seonglae.Intuiter.yaml
          echo "PackageVersion:" ${{ env.RELEASE_VERSION }} >> Seonglae.Intuiter.yaml
          echo "License: MIT" >> Seonglae.Intuiter.yaml
          echo "InstallerType: exe" >> Seonglae.Intuiter.yaml
          echo "InstallerSwitches:" >> Seonglae.Intuiter.yaml
          echo "  Silent: /S" >> Seonglae.Intuiter.yaml
          echo "  SilentWithProgress: /S" >> Seonglae.Intuiter.yaml
          echo "Installers:" >> Seonglae.Intuiter.yaml
          echo "- Architecture: x86" >> Seonglae.Intuiter.yaml
          echo "  InstallerUrl: https://github.com/seonglae/intuiter/releases/download/${{ env.RELEASE_VERSION }}/Intuiter.exe" >> Seonglae.Intuiter.yaml
          echo "  InstallerSha256: `sha256sum build/Intuiter-${{ env.RELEASE_VERSION }}.exe | cut -c1-64`" >> Seonglae.Intuiter.yaml
          echo "ShortDescription: Seonglae.Intuiter" >> Seonglae.Intuiter.yaml
          echo "PackageLocale: en-US" >> Seonglae.Intuiter.yaml
          echo "ManifestType: singleton" >> Seonglae.Intuiter.yaml
          echo "ManifestVersion: 1.0.0" >> Seonglae.Intuiter.yaml

      - name: Install winget
        shell: powershell
        run: |
          # Install NtObjectManager module
          Install-Module NtObjectManager -Force
          # Install winget
          $vclibs = Invoke-WebRequest -Uri "https://store.rg-adguard.net/api/GetFiles" -Method "POST" -ContentType "application/x-www-form-urlencoded" -Body "type=PackageFamilyName&url=Microsoft.VCLibs.140.00_8wekyb3d8bbwe&ring=RP&lang=en-US" -UseBasicParsing | Foreach-Object Links | Where-Object outerHTML -match "Microsoft.VCLibs.140.00_.+_x64__8wekyb3d8bbwe.appx" | Foreach-Object href
          $vclibsuwp = Invoke-WebRequest -Uri "https://store.rg-adguard.net/api/GetFiles" -Method "POST" -ContentType "application/x-www-form-urlencoded" -Body "type=PackageFamilyName&url=Microsoft.VCLibs.140.00.UWPDesktop_8wekyb3d8bbwe&ring=RP&lang=en-US" -UseBasicParsing | Foreach-Object Links | Where-Object outerHTML -match "Microsoft.VCLibs.140.00.UWPDesktop_.+_x64__8wekyb3d8bbwe.appx" | Foreach-Object href
          Invoke-WebRequest $vclibsuwp -OutFile Microsoft.VCLibs.140.00.UWPDesktop_8wekyb3d8bbwe.appx
          Invoke-WebRequest $vclibs -OutFile Microsoft.VCLibs.140.00_8wekyb3d8bbwe.appx
          Add-AppxPackage -Path .\Microsoft.VCLibs.140.00.UWPDesktop_8wekyb3d8bbwe.appx
          Add-AppxPackage -Path .\Microsoft.VCLibs.140.00_8wekyb3d8bbwe.appx
          Invoke-WebRequest https://github.com/microsoft/winget-cli/releases/download/v1.0.11451/Microsoft.DesktopAppInstaller_8wekyb3d8bbwe.appxbundle -OutFile Microsoft.DesktopAppInstaller_8wekyb3d8bbwe.appxbundle
          Add-AppxPackage -Path .\Microsoft.DesktopAppInstaller_8wekyb3d8bbwe.appxbundle
          # Create reparse point
          $installationPath = (Get-AppxPackage Microsoft.DesktopAppInstaller).InstallLocation
          explorer.exe "shell:appsFolder\Microsoft.DesktopAppInstaller_8wekyb3d8bbwe!winget"

      - name: Validate Manifest
        shell: powershell
        run: |
          winget validate --manifest manifests/s/Seonglae/Intuiter/${{ env.RELEASE_VERSION }}
          winget install --manifest manifests/s/Seonglae/Intuiter/${{ env.RELEASE_VERSION }}
